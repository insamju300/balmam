DROP DATABASE IF EXISTS `Balmam`;
CREATE DATABASE `Balmam`;
USE `Balmam`;

CREATE TABLE mediaFiles (
    id BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    regDate TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updateDate TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    name VARCHAR(255),
    thumbnailName VARCHAR(255),
    size BIGINT,
    type VARCHAR(50)
);

INSERT INTO mediaFiles SET `name`= 'boy.webp', size = 203486, `type`='image';
INSERT INTO mediaFiles SET `name`= 'girl.webp', size = 203486, `type`='image';
INSERT INTO mediaFiles SET `name`= 'yongman.webp', size = 203486, `type`='image';
INSERT INTO mediaFiles SET `name`= 'youngwoman.webp', size = 203486, `type`='image';
INSERT INTO mediaFiles SET `name`= 'grandpa.webp', size = 203486, `type`='image';
INSERT INTO mediaFiles SET `name`= 'grandma.webp', size = 203486, `type`='image';

CREATE TABLE `Member` (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    regDate TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updateDate TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    email VARCHAR(255) UNIQUE NOT NULL,
    `password` VARCHAR(255) NOT NULL,
    nickname VARCHAR(100) NOT NULL,
    introduction TEXT,
    profileImageId BIGINT,
    isWithdrawn BOOLEAN DEFAULT FALSE,
    withdrawalDate DATETIME,
    emailVerified BOOLEAN DEFAULT FALSE,
    roleType VARCHAR(50) DEFAULT 'user'
);

CREATE TABLE EmailAuthentications (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    memberId BIGINT NOT NULL,
    token VARCHAR(255) NOT NULL,
    regDate TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    expiresAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    verified BOOLEAN DEFAULT FALSE,
    TYPE VARCHAR(50)
);

CREATE TABLE trace (
    id BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    regDate TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updateDate TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    writerId BIGINT UNSIGNED,
    isDeleted BOOLEAN DEFAULT FALSE,
    deletedDate TIMESTAMP NULL,
    title VARCHAR(255),
    recordingStartTime TIMESTAMP NULL,
    recordingEndTime TIMESTAMP NULL,
    totalPauseTime BIGINT DEFAULT 0,
    hitCount INT DEFAULT 0,
    likeCount INT DEFAULT 0,
    bookmarkCount INT DEFAULT 0,
    commentCount INT DEFAULT 0,
    orderPoint BIGINT DEFAULT 0,
    status VARCHAR(255)
);

DELIMITER //
CREATE TRIGGER before_insert_trace
BEFORE INSERT ON trace
FOR EACH ROW
BEGIN
    -- Calculate the difference in seconds from the reference date to regDate
    -- Assuming January 1, 2024, as the reference date
    SET NEW.orderPoint = NEW.hitCount + NEW.likeCount + NEW.bookmarkCount + NEW.commentCount 
                         + (UNIX_TIMESTAMP(NEW.regDate) - UNIX_TIMESTAMP('2024-01-01 00:00:00'));
END; //
DELIMITER ;

DELIMITER //
CREATE TRIGGER before_update_trace
BEFORE UPDATE ON trace
FOR EACH ROW
BEGIN
    -- Recalculate considering the current counts and the difference in seconds from the reference date
    SET NEW.orderPoint = NEW.hitCount + NEW.likeCount + NEW.bookmarkCount + NEW.commentCount 
                         + (UNIX_TIMESTAMP(NEW.regDate) - UNIX_TIMESTAMP('2024-01-01 00:00:00'));
END; //
DELIMITER ;


##경로 좌표 그룹
CREATE TABLE pathCoordinatesGroup(
    id BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    regDate TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updateDate TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    traceId BIGINT UNSIGNED NOT NULL,
    order INT NOT NULL
)

##경로 좌표
CREATE TABLE pathCoordinate (
    id BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    regDate TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updateDate TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    pathCoordinatesGroupId BIGINT UNSIGNED NOT NULL,
    `time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,  
    lat DECIMAL(10, 8) NOT NULL, 
    lng DECIMAL(11, 8) NOT NULL
);

CREATE TABLE StayedCity (
    id BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    regDate TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updateDate TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    traceId BIGINT UNSIGNED NOT NULL,
    stayedTime BIGINT NOT NULL,
	name VARCHAR(255) NOT NULL
);

CREATE TABLE CityTag (
    id BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    regDate TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updateDate TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    color VARCHAR(255) NOT NULL,
    name VARCHAR(255) NOT NULL,
    UNIQUE(name)
);


CREATE TABLE GeoMedia (
    id BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    regDate TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updateDate TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    lat DECIMAL(10, 8), -- 위도는 일반적으로 -90과 90 사이의 값입니다. 소수점 아래 자릿수는 필요에 따라 조정할 수 있습니다.
    lng DECIMAL(11, 8), -- 경도는 일반적으로 -180과 180 사이의 값입니다. 소수점 아래 자릿수는 필요에 따라 조정할 수 있습니다.
    traceId BIGINT UNSIGNED, -- traceId의 정확한 사용 목적에 따라 데이터 타입이 조정될 수 있습니다.
    isDeleted BOOLEAN DEFAULT FALSE, -- 삭제 여부를 나타내는 필드입니다. MySQL에서는 BOOLEAN 대신 TINYINT(1)이 사용될 수 있습니다.
    deletedDate TIMESTAMP NULL -- 삭제된 날짜를 나타내는 필드입니다. 삭제되지 않은 경우 NULL 값을 가질 수 있습니다.
)

CREATE TABLE GeoMediaFile (
    id BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    regDate TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updateDate TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    geoMediaId BIGINT UNSIGNED NOT NULL,
    mediaFileId BIGINT UNSIGNED NOT NULL,
    isDeleted BOOLEAN DEFAULT FALSE,
    deletedDate TIMESTAMP NULL
    -- 외래 키 제약 조건을 추가할 수 있습니다. 예를 들어:
    -- FOREIGN KEY (geoMediaId) REFERENCES GeoMedia(id),
    -- FOREIGN KEY (mediaFileId) REFERENCES MediaFile(id)
);


일단 저장용.
SELECT *
FROM trace
WHERE someCondition = true
  AND (
    orderPoint < :currentOrderPoint
    OR
    (orderPoint = :currentOrderPoint AND id < :currentId)
  )
ORDER BY orderPoint DESC, id DESC
LIMIT 10;